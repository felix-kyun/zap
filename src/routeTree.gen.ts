/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as LoginRouteImport } from './routes/login'
import { Route as CreateRouteImport } from './routes/create'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthenticatedUnlockRouteImport } from './routes/_authenticated/unlock'
import { Route as AuthenticatedDashboardRouteRouteImport } from './routes/_authenticated/dashboard/route'
import { Route as AuthenticatedDashboardIndexRouteImport } from './routes/_authenticated/dashboard/index'
import { Route as AuthenticatedDashboardTypeIndexRouteImport } from './routes/_authenticated/dashboard/$type/index'

const AboutLazyRouteImport = createFileRoute('/about')()

const AboutLazyRoute = AboutLazyRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))
const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const CreateRoute = CreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedUnlockRoute = AuthenticatedUnlockRouteImport.update({
  id: '/unlock',
  path: '/unlock',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedDashboardRouteRoute =
  AuthenticatedDashboardRouteRouteImport.update({
    id: '/dashboard',
    path: '/dashboard',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedDashboardIndexRoute =
  AuthenticatedDashboardIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedDashboardRouteRoute,
  } as any)
const AuthenticatedDashboardTypeIndexRoute =
  AuthenticatedDashboardTypeIndexRouteImport.update({
    id: '/$type/',
    path: '/$type/',
    getParentRoute: () => AuthenticatedDashboardRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/create': typeof CreateRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/about': typeof AboutLazyRoute
  '/dashboard': typeof AuthenticatedDashboardRouteRouteWithChildren
  '/unlock': typeof AuthenticatedUnlockRoute
  '/dashboard/': typeof AuthenticatedDashboardIndexRoute
  '/dashboard/$type': typeof AuthenticatedDashboardTypeIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/create': typeof CreateRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/about': typeof AboutLazyRoute
  '/unlock': typeof AuthenticatedUnlockRoute
  '/dashboard': typeof AuthenticatedDashboardIndexRoute
  '/dashboard/$type': typeof AuthenticatedDashboardTypeIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/create': typeof CreateRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/about': typeof AboutLazyRoute
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRouteRouteWithChildren
  '/_authenticated/unlock': typeof AuthenticatedUnlockRoute
  '/_authenticated/dashboard/': typeof AuthenticatedDashboardIndexRoute
  '/_authenticated/dashboard/$type/': typeof AuthenticatedDashboardTypeIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/create'
    | '/login'
    | '/signup'
    | '/about'
    | '/dashboard'
    | '/unlock'
    | '/dashboard/'
    | '/dashboard/$type'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/create'
    | '/login'
    | '/signup'
    | '/about'
    | '/unlock'
    | '/dashboard'
    | '/dashboard/$type'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/create'
    | '/login'
    | '/signup'
    | '/about'
    | '/_authenticated/dashboard'
    | '/_authenticated/unlock'
    | '/_authenticated/dashboard/'
    | '/_authenticated/dashboard/$type/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  CreateRoute: typeof CreateRoute
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
  AboutLazyRoute: typeof AboutLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/create': {
      id: '/create'
      path: '/create'
      fullPath: '/create'
      preLoaderRoute: typeof CreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/unlock': {
      id: '/_authenticated/unlock'
      path: '/unlock'
      fullPath: '/unlock'
      preLoaderRoute: typeof AuthenticatedUnlockRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/dashboard/': {
      id: '/_authenticated/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof AuthenticatedDashboardIndexRouteImport
      parentRoute: typeof AuthenticatedDashboardRouteRoute
    }
    '/_authenticated/dashboard/$type/': {
      id: '/_authenticated/dashboard/$type/'
      path: '/$type'
      fullPath: '/dashboard/$type'
      preLoaderRoute: typeof AuthenticatedDashboardTypeIndexRouteImport
      parentRoute: typeof AuthenticatedDashboardRouteRoute
    }
  }
}

interface AuthenticatedDashboardRouteRouteChildren {
  AuthenticatedDashboardIndexRoute: typeof AuthenticatedDashboardIndexRoute
  AuthenticatedDashboardTypeIndexRoute: typeof AuthenticatedDashboardTypeIndexRoute
}

const AuthenticatedDashboardRouteRouteChildren: AuthenticatedDashboardRouteRouteChildren =
  {
    AuthenticatedDashboardIndexRoute: AuthenticatedDashboardIndexRoute,
    AuthenticatedDashboardTypeIndexRoute: AuthenticatedDashboardTypeIndexRoute,
  }

const AuthenticatedDashboardRouteRouteWithChildren =
  AuthenticatedDashboardRouteRoute._addFileChildren(
    AuthenticatedDashboardRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedDashboardRouteRoute: typeof AuthenticatedDashboardRouteRouteWithChildren
  AuthenticatedUnlockRoute: typeof AuthenticatedUnlockRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedDashboardRouteRoute:
    AuthenticatedDashboardRouteRouteWithChildren,
  AuthenticatedUnlockRoute: AuthenticatedUnlockRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  CreateRoute: CreateRoute,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  AboutLazyRoute: AboutLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
